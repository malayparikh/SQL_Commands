-- Create table for employees
CREATE TABLE employees (
    emp_id INT PRIMARY KEY,
    emp_name VARCHAR(100),
    department_id INT
);

-- Create table for departments
CREATE TABLE departments (
    dept_id INT PRIMARY KEY,
    dept_name VARCHAR(100)
);

-- Insert data into employees table
INSERT INTO employees (emp_id, emp_name, department_id) VALUES
(1, 'John Doe', 1),
(2, 'Jane Smith', 2),
(3, 'Alice Johnson', 1),
(4, 'Bob Williams', 3);

-- Insert data into departments table
INSERT INTO departments (dept_id, dept_name) VALUES
(1, 'HR'),
(2, 'Marketing'),
(3, 'Finance');
===============================================================

-- Example: Retrieve employees from the HR department
SELECT emp_id, emp_name
FROM employees
WHERE department_id = 1;

-- Example: Count the number of employees in each department
SELECT department_id, COUNT(emp_id) AS num_employees
FROM employees
GROUP BY department_id;

-- Example: List employees sorted by their names
SELECT emp_id, emp_name
FROM employees
ORDER BY emp_name;

-- Example: Find employees whose names start with 'J'
SELECT emp_id, emp_name
FROM employees
WHERE emp_name LIKE 'J%';

-- Example: Retrieve the first 5 employees
SELECT emp_id, emp_name
FROM employees
LIMIT 5;
=====================================

SELECT * FROM cmpdb.employees;

use cmpdb;
SELECT *
FROM employees e
INNER JOIN department d
ON e.department_id = d.dept_id;

SELECT * FROM employees
LEFT JOIN department
ON employees.department_id=department.dept_id;


SELECT * FROM employees
RIGHT JOIN department
ON employees.department_id=department.dept_id;

SELECT * FROM employees
FULL JOIN department
ON employees.department_id=department.dept_id;

SELECT employees.emp_id, employees.emp_name, department.dept_name
FROM employees
CROSS JOIN department;

======================================

create table projects(
project_id int primary key,
project_name VARCHAR(100)
);

CREATE TABLE employee_projects(

emp_id INT,
project_id INT,
primary key(emp_id, project_id),
foreign key (emp_id) references employees(emp_id),
foreign key (project_id) references projects(project_id)
);

INSERT INTO projects (project_id, project_name) VALUES
(101, 'Project A'),
(102, 'Project B'),
(103, 'Project C');

INSERT INTO employee_projects (emp_id, project_id) VALUES
(1, 101),
(2, 101),
(3, 102),
(4, 103);

==================

SELECT e.emp_name, d.dept_name, p.project_name
FROM employees e
INNER JOIN department d ON e.department_id=d.dept_id
INNER JOIN employee_projects ep ON e.emp_id = ep.emp_id
INNER JOIN projects p ON ep.project_id =p.project_id;


